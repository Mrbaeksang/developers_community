/* 모바일 뷰포트 안전 영역 스타일 시트 */
/* 
  이 파일은 모바일에서 컴포넌트가 잘리지 않도록 
  일괄적으로 적용되는 안전 규칙들을 포함합니다.
*/

/* ================================================
   1. 컨테이너 안전 영역 설정
   ================================================ */
@media screen and (max-width: 640px) {
  /* 모든 컨테이너에 최소 여백 확보 */
  .container,
  [class*='container'],
  main > div:first-child {
    padding-left: max(0.75rem, env(safe-area-inset-left));
    padding-right: max(0.75rem, env(safe-area-inset-right));
  }

  /* 풀 너비 컴포넌트는 패딩 내부로 제한 */
  .w-full,
  [class*='w-full'] {
    max-width: 100%;
  }
}

/* ================================================
   2. 그림자와 테두리가 있는 컴포넌트 보호
   ================================================ */
@media screen and (max-width: 640px) {
  /* Brutal 디자인 시스템 컴포넌트 */
  [class*='shadow-['][class*='px'],
  [class*='border-'][class*='shadow-'] {
    /* 그림자 크기만큼 내부 여백 확보 */
    --shadow-offset: 10px;
    max-width: calc(100% - var(--shadow-offset));
    margin-left: auto;
    margin-right: auto;
  }

  /* 특정 그림자 크기별 조정 */
  .shadow-\[4px_4px_0px_0px_rgba\(0\,0\,0\,1\)\] {
    --shadow-offset: 8px;
  }

  .shadow-\[6px_6px_0px_0px_rgba\(0\,0\,0\,1\)\] {
    --shadow-offset: 12px;
  }

  .shadow-\[8px_8px_0px_0px_rgba\(0\,0\,0\,1\)\] {
    --shadow-offset: 16px;
  }

  /* 카드 컴포넌트 기본 보호 */
  .bg-white.border-2.border-black,
  article.border-2.border-black,
  div[class*='card'].border-2 {
    width: calc(100% - 1rem);
    max-width: calc(100% - 1rem);
    margin-left: auto;
    margin-right: auto;
  }
}

/* ================================================
   3. 절대/고정 위치 요소 보호
   ================================================ */
@media screen and (max-width: 640px) {
  /* 절대/고정 위치 요소가 화면 밖으로 나가지 않도록 */
  .absolute,
  .fixed,
  [class*='absolute'],
  [class*='fixed'] {
    max-width: calc(100vw - 1rem);
  }

  /* 우측 정렬 요소 보호 */
  .right-0,
  [class*='right-0'] {
    right: max(0, env(safe-area-inset-right));
  }

  /* 좌측 정렬 요소 보호 */
  .left-0,
  [class*='left-0'] {
    left: max(0, env(safe-area-inset-left));
  }
}

/* ================================================
   4. 그리드/플렉스 레이아웃 최적화
   ================================================ */
@media screen and (max-width: 640px) {
  /* 그리드 아이템이 컨테이너를 넘지 않도록 */
  .grid > *,
  [class*='grid-'] > * {
    min-width: 0;
    max-width: 100%;
  }

  /* 플렉스 아이템 보호 */
  .flex > *,
  [class*='flex'] > * {
    min-width: 0;
    flex-shrink: 1;
  }

  /* 가로 스크롤이 의도된 경우 제외 */
  .overflow-x-auto > *,
  .overflow-x-scroll > *,
  .scrollbar-hide > * {
    flex-shrink: 0; /* 의도적 스크롤 유지 */
  }
}

/* ================================================
   5. 폼 요소 보호
   ================================================ */
@media screen and (max-width: 640px) {
  /* 입력 필드가 화면을 넘지 않도록 */
  input:not([type='checkbox']):not([type='radio']),
  textarea,
  select {
    max-width: 100%;
    width: 100%;
  }

  /* 버튼 그룹 정렬 */
  .btn-group,
  [class*='button-group'],
  form > div:has(button) {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .btn-group > *,
  [class*='button-group'] > * {
    flex: 1 1 auto;
    min-width: 120px;
  }
}

/* ================================================
   6. 이미지/미디어 요소 보호
   ================================================ */
@media screen and (max-width: 640px) {
  img,
  video,
  iframe,
  embed,
  object {
    max-width: 100%;
    height: auto;
  }

  /* Next.js Image 컴포넌트 보호 */
  [class*='next-image'],
  span:has(> img) {
    max-width: 100% !important;
  }
}

/* ================================================
   7. 모달/다이얼로그 보호
   ================================================ */
@media screen and (max-width: 640px) {
  /* 모달이 화면을 넘지 않도록 */
  [role='dialog'],
  [class*='modal'],
  [class*='dialog'] {
    max-width: calc(100vw - 2rem);
    max-height: calc(100vh - 2rem);
    margin: 1rem;
  }

  /* 드롭다운/팝오버 보호 */
  [data-radix-popper-content-wrapper],
  [class*='dropdown'],
  [class*='popover'] {
    max-width: calc(100vw - 1rem) !important;
  }
}

/* ================================================
   8. 테이블 반응형 처리
   ================================================ */
@media screen and (max-width: 640px) {
  table {
    display: block;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  /* 테이블 셀이 너무 좁아지지 않도록 */
  td,
  th {
    min-width: 100px;
    padding: 0.5rem;
  }
}

/* ================================================
   9. 네비게이션 바 보호
   ================================================ */
@media screen and (max-width: 640px) {
  /* 헤더/네비게이션 바 보호 */
  header,
  nav,
  [class*='navbar'],
  [class*='header'] {
    width: 100%;
    max-width: 100vw;
    padding-left: max(0.75rem, env(safe-area-inset-left));
    padding-right: max(0.75rem, env(safe-area-inset-right));
  }

  /* 네비게이션 아이템 정렬 */
  nav ul,
  nav ol,
  [class*='nav-list'] {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    padding: 0;
    margin: 0;
  }
}

/* ================================================
   10. 유틸리티 클래스
   ================================================ */
.mobile-safe {
  /* 모바일에서 안전한 패딩 적용 */
  @media screen and (max-width: 640px) {
    padding-left: max(1rem, env(safe-area-inset-left));
    padding-right: max(1rem, env(safe-area-inset-right));
    max-width: 100%;
  }
}

.mobile-safe-card {
  /* 카드형 컴포넌트용 안전 클래스 */
  @media screen and (max-width: 640px) {
    width: calc(100% - 1rem);
    max-width: calc(100% - 1rem);
    margin-left: auto;
    margin-right: auto;
  }
}

.mobile-no-overflow {
  /* 오버플로우 강제 방지 */
  @media screen and (max-width: 640px) {
    overflow-x: hidden !important;
    max-width: 100vw !important;
  }
}

/* ================================================
   11. iOS 특별 처리
   ================================================ */
@supports (padding: max(0px)) {
  @media screen and (max-width: 640px) {
    /* iOS 노치/홈 인디케이터 영역 보호 */
    body {
      padding-top: env(safe-area-inset-top);
      padding-bottom: env(safe-area-inset-bottom);
    }

    /* 하단 고정 요소 보호 */
    .bottom-0,
    [class*='bottom-0'] {
      bottom: env(safe-area-inset-bottom);
    }
  }
}

/* ================================================
   12. 디버깅 도구 (개발 환경에서만 사용)
   ================================================ */
/* 
  개발 중 오버플로우 요소를 찾기 위한 디버깅 클래스
  사용법: body에 'debug-overflow' 클래스 추가
*/
.debug-overflow * {
  @media screen and (max-width: 640px) {
    outline: 1px solid red !important;
  }
}

.debug-overflow *:hover {
  @media screen and (max-width: 640px) {
    outline: 2px solid blue !important;
    background: rgba(0, 0, 255, 0.1) !important;
  }
}
